
name: ECS Rollback

on:
  workflow_dispatch:
   inputs:
     ECR_Url:
         description: 'ECR Registry URL'
         required: true
         default: '847370586410.dkr.ecr.us-west-2.amazonaws.com/appmod'
     image_tag:
         description: 'Rollback Image TAG'
         required: true
         default: 'initial'


env:
  AWS_REGION: "us-west-2"                  # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: "appmod"          # set this to your Amazon ECR repository name
  ECS_SERVICE: "app-mod-service"                 # set this to your Amazon ECS service name
  ECS_CLUSTER: "appmod-cluster"               # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: task-definitions.json  # set this to the path to your Amazon ECS task definition
  CODE_DEPLOY_DEPLOYMENT_GROUP: "deployment-group"  
  CODE_DEPLOY_APPLICATION: "deployment-app"                                          # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: "app-mod-web"          # set this to the name of the container in the
  TASK_ARN: "arn:aws:ecs:us-west-2:847370586410:task-definition/app-mod-web"                                            # containerDefinitions section of your task definition

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3
    

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2


      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image:  ${{ github.event.inputs.ECR_Url }}:${{ github.event.inputs.image_tag }}
          
      - name: Update App Spec File
        run: |
          ls
          pwd
          echo ${{ github.event.inputs.image_tag }}
          echo ${{ github.event.inputs.ECR_Url }} 
          echo ${{ github.event.inputs.ECR_Url }}:${{ github.event.inputs.image_tag }}

          sed -ie "s/<CONTAINER_NAME>/$CONTAINER_NAME/" ./appspec.json
          sed -ie "s/<CONTAINER_PORT>/$CONTAINER_PORT/" ./appspec.json

        env:
          CONTAINER_NAME: "app-mod-web"
          CONTAINER_PORT: 8080

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
          codedeploy-deployment-group: ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP }} 
          codedeploy-application: ${{ env.CODE_DEPLOY_APPLICATION }}
          codedeploy-appspec: appspec.json
